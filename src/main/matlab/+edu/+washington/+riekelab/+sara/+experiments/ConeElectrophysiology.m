classdef ConeElectrophysiology < symphonyui.core.persistent.descriptions.ExperimentDescription

    methods

        function obj = ConeElectrophysiology()
            import symphonyui.core.*;

            % general settings
            obj.addProperty('experimenter', 'Sara Patterson', ...
                'description', 'Who performed the experiment');
            obj.addProperty('project', '', ...
                'description', 'Project the experiment belongs to');
            obj.addProperty('institution', 'UW', ...
                'description', 'Institution where the experiment was performed');
            obj.addProperty('lab', 'Manookin Lab', ...
                'description', 'Lab where experiment was performed');
            obj.addProperty('rig', '', ...
                'type', PropertyType('char', 'row', {'', 'A (manookin1)',... 
                'B (two photon)', 'C (suction)', 'E (confocal)',... 
                'F (old slice)', 'G (shared two photon)'}), ...
                'description', 'Rig where experiment was performed');
            
            % calibration settings
            obj.addProperty('redLED', 20,...
                'description', 'red led setting');
            obj.addProperty('greenLED', 16,...
                'description', 'green led setting');
            obj.addProperty('blueLED', 13,...
                'description', 'blue led setting');
            obj.addProperty('powerRed', '',...
                'description', 'Red LED calibration (uW)');
            obj.addProperty('powerGreen505', '',...
                'description', '505nm green LED calibration (uW)');
            obj.addProperty('powerGreen570', '',...
                'description', '570nm green LED calibration (uW)');
            obj.addProperty('powerBlue', '',...
                'description', 'Blue LED calibration (uW)');
            obj.addProperty('radiometerDate', datestr(now, 'ddmmmyyyy'),...
                'description', 'Date of optometer calibration');
            obj.addProperty('gammaData', datestr('03Apr2017'),...
                'description', 'Date of last gamma calibration');
            obj.addProperty('spectraDate', datestr('03Apr2017'),...
                'description', 'Date of last spectra measurement');
            
            rig = obj.getPropertyDescriptors().findByName('rig');
            index = find(strncmpi(rig.type.domain, getenv('RIG_LETTER'), 1), 1);
            if ~isempty(index)
                rig.value = rig.type.domain{index};
            end
        end
    end
end
