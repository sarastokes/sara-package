classdef Cell < edu.washington.riekelab.manookin.sources.Cell
    
    methods
        
        function obj = Cell()
            import symphonyui.core.*;
            
            obj.addProperty('type', 'unknown', ...
                'type', PropertyType('char', 'row', containers.Map( ...
                    {'unknown', 'RGC', 'amacrine', 'bipolar', 'horizontal', 'photoreceptor'}, ...
                    {{}, ...
                    {'ON-parasol', 'OFF parasol', 'ON midget', 'OFF midget', 'small bistratified','ON smooth monostratified','OFF smooth monostratified', 'ON', 'OFF', 'ON-OFF', 'melanopsin'}, ...
                    {'AII', 'A17', 'ON-starburst', 'ON-wiry', 'OFF-wiry', 'ON', 'OFF', 'ON-OFF'}, ...
                    {'OFF-diffuse', 'OFF-midget', 'ON-diffuse', 'ON-midget', 'rod'}, ...
                    {}, ...
                    {'S cone', 'M cone', 'L cone', 'rod'}})), ...
                'description', 'The confirmed type of the recorded cell');
            
            obj.addProperty('center', 'unknown',...
                'center', PropertyType('char', 'row', containers.Map(...
                    {'unknown', 'L', 'M', 'LM', 'LS', 'MS', 'LMS'})),...
                'description', 'Center cone type(s)');
            obj.addProperty('surround', 'unknown',...
                'type', PropertyType('char', 'row', containers.Map(...
                    {'unknown', 'L', 'M', 'S', 'LM', 'LS', 'MS', 'LMS'})),...
                'description', 'surround cone type(s)');
            obj.addProperty('SConeInput','unknown',...
                'SConeInput', PropertyType('char', 'row', containers.Map(...
                    {'unknown', 'yes', 'no'})),...
                'description', 'has s-cone input');
            
            obj.addAllowableParentType('edu.washington.riekelab.manookin.sources.primate.Preparation');
        end
        
    end
    
end

